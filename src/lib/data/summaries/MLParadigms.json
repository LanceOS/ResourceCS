[
  {
    "topic": "Machine Learning Paradigms",
    "summary": {
      "title": "A Deep Dive into Machine Learning Paradigms",
      "body": "There are four main paradigms of machine learning, each with a distinct approach to learning from data. The most common are **supervised learning** and **unsupervised learning**. Supervised learning uses labeled datasets to teach models how to make predictions, while unsupervised learning discovers patterns in unlabeled data. **Reinforcement learning** involves an agent learning to make decisions through trial and error to maximize a reward. A fourth paradigm, **semi-supervised learning**, bridges the gap between supervised and unsupervised methods by using a small amount of labeled data with a large amount of unlabeled data to improve model performance. ",
      "sources": [
        {
          "name": "IBM Cloud Education - Supervised vs. Unsupervised Learning",
          "source": "https://www.ibm.com/cloud/blog/supervised-vs-unsupervised-learning"
        },
        {
          "name": "Berkeley - Reinforcement Learning",
          "source": "https://sites.google.com/berkeley.edu/reinforcement-learning/home"
        },
        {
          "name": "Google Developers - Semi-supervised Learning",
          "source": "https://developers.google.com/machine-learning/semi-supervised"
        }
      ],
      "related_concepts": [
        {
          "name": "Difference between supervised and unsupervised learning",
          "link": "https://www.ibm.com/cloud/blog/supervised-vs-unsupervised-learning"
        },
        {
          "name": "How reinforcement learning works",
          "link": "https://deepai.org/machine-learning-glossary-and-terms/reinforcement-learning"
        }
      ]
    }
  },
  {
    "topic": "Supervised learning",
    "summary": {
      "title": "A Deep Dive into Supervised Learning",
      "body": "Supervised learning is a core machine learning paradigm where an algorithm learns to make predictions from a **labeled training dataset**. This dataset includes both the input features and the correct output labels. The model's primary goal is to learn the underlying mapping from the inputs to the correct outputs. Once the model has been trained, it can then be used to make accurate predictions on new, unseen data. A good analogy is teaching a child to identify fruits: you show them pictures of apples and label them as 'apple.' The child learns to recognize the features of an apple and can then identify new pictures of apples they haven't seen before. Common tasks in supervised learning include **regression** (predicting a continuous value) and **classification** (predicting a discrete category). ",
      "sources": [
        {
          "name": "IBM Cloud Education: Supervised vs Unsupervised Learning",
          "source": "https://www.ibm.com/cloud/blog/supervised-vs-unsupervised-learning"
        },
        {
          "name": "Google Developers: Machine Learning Crash Course",
          "source": "https://developers.google.com/machine-learning/crash-course/supervised-learning/super-and-unsuper"
        },
        {
          "name": "Stanford University: Supervised Learning",
          "source": "https://cs229.stanford.edu/notes2021fall/main_notes.pdf"
        }
      ],
      "related_concepts": [
        {
          "name": "Training data",
          "link": "https://developers.google.com/machine-learning/glossary#training-set"
        },
        {
          "name": "Labeled data",
          "link": "https://developers.google.com/machine-learning/glossary#labeled-data"
        },
        {
          "name": "Regression vs. classification",
          "link": "https://www.cs.wisc.edu/machine-learning-basics/regression-and-classification-in-machine-learning/"
        }
      ]
    }
  },
  {
    "topic": "Unsupervised learning",
    "summary": {
      "title": "A Deep Dive into Unsupervised Learning",
      "body": "Unsupervised learning is a machine learning paradigm that works with datasets that have **no labels**. The algorithm's task is to find hidden patterns, structures, and relationships within the data on its own. Instead of being told the correct answers, the model must discover its own internal representation of the data. This is often used for exploratory data analysis or to pre-process data for other tasks. Common unsupervised learning tasks include **clustering**, where the model groups similar data points together (e.g., segmenting customers into different groups based on their purchasing habits), and **dimensionality reduction**, which simplifies complex data by reducing the number of variables while retaining the most important information. 

[Image of a diagram of unsupervised learning]
",
      "sources": [
        {
          "name": "IBM Cloud Education: Supervised vs Unsupervised Learning",
          "source": "https://www.ibm.com/cloud/blog/supervised-vs-unsupervised-learning"
        },
        {
          "name": "Google Developers: Unsupervised Learning",
          "source": "https://developers.google.com/machine-learning/glossary#unsupervised-learning"
        },
        {
          "name": "Towards Data Science: A Gentle Introduction to Unsupervised Learning",
          "source": "https://towardsdatascience.com/a-gentle-introduction-to-unsupervised-learning-7c3093284050"
        }
      ],
      "related_concepts": [
        {
          "name": "Clustering",
          "link": "https://developers.google.com/machine-learning/crash-course/clustering/basics"
        },
        {
          "name": "Dimensionality reduction",
          "link": "https://en.wikipedia.org/wiki/Dimensionality_reduction"
        },
        {
          "name": "K-Means clustering",
          "link": "https://www.ibm.com/topics/k-means-clustering"
        }
      ]
    }
  },
  {
    "topic": "Reinforcement learning",
    "summary": {
      "title": "A Deep Dive into Reinforcement Learning",
      "body": "Reinforcement learning is a machine learning paradigm where a software **agent** learns to make decisions by interacting with an **environment**. It operates on a system of **rewards** and **penalties**. The agent takes an action in the environment and receives a positive reward if the action is good or a penalty if it's bad. The goal of the agent is to learn a strategy, or a 'policy,' that maximizes the cumulative reward over time. It's a process of trial and error, where the agent is not told what the correct action is but instead figures it out through experience. This paradigm is widely used in applications like robotics, autonomous driving, and training AI to play games like chess and Go, where the rules of the environment are well-defined but the optimal strategy is not known in advance. ",
      "sources": [
        {
          "name": "Berkeley: Reinforcement Learning",
          "source": "https://sites.google.com/berkeley.edu/reinforcement-learning/home"
        },
        {
          "name": "DeepAI: Reinforcement Learning",
          "source": "https://deepai.org/machine-learning-glossary-and-terms/reinforcement-learning"
        },
        {
          "name": "Google AI Blog: A Beginner's Guide to Reinforcement Learning",
          "source": "https://ai.googleblog.com/2021/08/a-beginners-guide-to-reinforcement.html"
        }
      ],
      "related_concepts": [
        {
          "name": "Agent, environment, and reward",
          "link": "https://www.javatpoint.com/reinforcement-learning-environment-agent"
        },
        {
          "name": "Explore-exploit trade-off",
          "link": "https://www.ibm.com/topics/explore-exploit-trade-off"
        },
        {
          "name": "Markov decision process",
          "link": "https://www.ibm.com/topics/markov-decision-process"
        }
      ]
    }
  },
  {
    "topic": "Semi-supervised learning",
    "summary": {
      "title": "A Deep Dive into Semi-supervised Learning",
      "body": "Semi-supervised learning is a hybrid machine learning paradigm that tackles the common problem of expensive data labeling. It combines a small amount of **labeled data** with a much larger amount of **unlabeled data** during training. The core idea is that the model can learn from the labeled data to understand the basic structure of the problem, and then use that knowledge to find patterns in the unlabeled data. This allows the model to leverage the large, un-annotated datasets to improve its performance and generalization, often achieving accuracy levels close to fully supervised models without the high cost of manual labeling. Common techniques include pseudo-labeling, where the model makes predictions on unlabeled data and treats those predictions as if they were true labels for further training. ",
      "sources": [
        {
          "name": "Google Developers: Semi-supervised Learning",
          "source": "https://developers.google.com/machine-learning/semi-supervised"
        },
        {
          "name": "IBM Cloud Education: What is Semi-supervised Learning?",
          "source": "https://www.ibm.com/cloud/blog/what-is-semi-supervised-learning"
        },
        {
          "name": "Towards Data Science: A Gentle Introduction to Semi-Supervised Learning",
          "source": "https://towardsdatascience.com/a-gentle-introduction-to-semi-supervised-learning-7a7019d0862"
        }
      ],
      "related_concepts": [
        {
          "name": "Pseudo-labeling",
          "link": "https://www.ibm.com/topics/pseudo-labeling"
        },
        {
          "name": "Bootstrapping",
          "link": "https://en.wikipedia.org/wiki/Bootstrapping_(statistics)"
        },
        {
          "name": "Comparison to supervised and unsupervised learning",
          "link": "https://www.ibm.com/cloud/blog/what-is-semi-supervised-learning"
        }
      ]
    }
  },
  {
    "topic": "Regression vs. Classification",
    "summary": {
      "title": "A Deep Dive into Regression vs. Classification Models",
      "body": "Regression and classification are two fundamental types of supervised learning tasks, distinguished by the nature of their output. **Regression models** are used to predict a **continuous numerical value**. The output is a number from a continuous range, such as predicting a house's price, a stock's future value, or the temperature. **Classification models**, on the other hand, are used to predict a **discrete categorical output**. The output is a category or a class, such as classifying an email as 'spam' or 'not spam,' identifying an image as containing a 'cat' or a 'dog,' or determining if a transaction is 'fraudulent' or 'legitimate.' ",
      "sources": [
        {
          "name": "University of Wisconsin-Madison - Regression vs. Classification",
          "source": "https://www.cs.wisc.edu/machine-learning-basics/regression-and-classification-in-machine-learning/"
        }
      ],
      "related_concepts": [
        {
          "name": "Examples of regression problems",
          "link": "https://developers.google.com/machine-learning/intro-to-ml/regression"
        },
        {
          "name": "Examples of classification problems",
          "link": "https://developers.google.com/machine-learning/intro-to-ml/classification"
        }
      ]
    }
  },
  {
    "topic": "Machine learning vs. Deep learning",
    "summary": {
      "title": "A Deep Dive into Machine Learning vs. Deep Learning",
      "body": "The relationship between machine learning and deep learning is one of a broader field and a specialized subfield. **Machine learning** is a general term for algorithms that can learn from data to make predictions or decisions without being explicitly programmed. It encompasses a wide range of techniques, many of which require human intervention to perform **feature engineering**, or the process of manually extracting relevant features from the data. **Deep learning**, in contrast, is a specific type of machine learning that uses multi-layered neural networks, known as **deep neural networks**. The key advantage of deep learning is that these networks can automatically learn hierarchical features directly from the raw data, eliminating the need for manual feature engineering. This capability makes deep learning particularly effective for complex tasks like image and speech recognition. ",
      "sources": [
        {
          "name": "IBM Cloud Education - Deep Learning vs. Machine Learning",
          "source": "https://www.ibm.com/cloud/blog/deep-learning-vs-machine-learning"
        },
        {
          "name": "Google AI Blog - What is the Difference Between AI, ML and Deep Learning?",
          "source": "https://ai.googleblog.com/2022/05/what-is-difference-between-ai-ml-and.html"
        }
      ],
      "related_concepts": [
        {
          "name": "Role of deep neural networks in deep learning",
          "link": "https://www.simplilearn.com/tutorials/deep-learning-tutorial/what-is-deep-learning"
        },
        {
          "name": "Feature engineering in machine learning",
          "link": "https://www.ibm.com/topics/feature-engineering"
        }
      ]
    }
  },
  {
    "topic": "Sentiment analysis",
    "summary": {
      "title": "A Deep Dive into Sentiment Analysis",
      "body": "Sentiment analysis, also known as opinion mining, is a branch of **natural language processing (NLP)** that uses machine learning and computational linguistics to automatically identify and quantify the emotional tone within a piece of text. The goal is to determine if the author's attitude towards a particular subject is positive, negative, or neutral. This technology is widely used in a variety of applications, such as analyzing customer reviews, monitoring social media for brand perception, and understanding public opinion on political issues. More advanced forms of sentiment analysis can even identify emotions like anger, joy, or sadness, or perform **aspect-based sentiment analysis** to determine sentiment towards specific features of a product or service. ",
      "sources": [
        {
          "name": "Stanford University - Sentiment Analysis",
          "source": "https://nlp.stanford.edu/sentiment/"
        },
        {
          "name": "MonkeyLearn - What is Sentiment Analysis?",
          "source": "https://monkeylearn.com/sentiment-analysis/"
        }
      ],
      "related_concepts": [
        {
          "name": "Natural Language Processing (NLP)",
          "link": "https://ai.googleblog.com/2021/08/an-introduction-to-natural-language.html"
        },
        {
          "name": "Aspect-based sentiment analysis",
          "link": "https://monkeylearn.com/blog/aspect-based-sentiment-analysis/"
        }
      ]
    }
  }
]